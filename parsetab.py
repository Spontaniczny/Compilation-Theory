
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFnonassocELSEnonassocLESSTHANGREATERTHANGREATEREQUALLESSEQUALEQUALNOTEQUALleftADDSUBleftDOTADDDOTSUBleftMULDIVleftDOTMULDOTDIVleftTRANSPOSEADD ADDASSIGN ASSIGN BREAK CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOATNUM FOR GREATEREQUAL GREATERTHAN ID IF INTNUM LESSEQUAL LESSTHAN MUL MULASSIGN NOTEQUAL ONES PRINT RANGE RETURN STRING SUB SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instruction_list program\n               | instruction_listinstruction_list : instruction_while\n                        | instruction_for\n                        | instruction_if\n                        | instruction_print ";"\n                        | instruction_return ";"\n                        | instruction_assign ";"\n                        | BREAK ";"\n                        | CONTINUE ";" instruction_list : "{" program "}"  instruction_while : WHILE "(" expression ")" instruction_listinstruction_for : FOR ID ASSIGN expression RANGE expression instruction_list instruction_if : IF "(" expression ")" instruction_list\n                       | IF "(" expression ")" instruction_list ELSE instruction_list instruction_print : PRINT printables printables : printable\n                   | printable "," printables printable : expression\n                  | strstr : STRING instruction_return : RETURN\n                           | RETURN expression instruction_assign : assignable ASSIGN expression\n                           | assignable ADDASSIGN expression\n                           | assignable SUBASSIGN expression\n                           | assignable MULASSIGN expression\n                           | assignable DIVASSIGN expression assignable : ID\n                   | matrix_element\n                   | vector_elementexpression : expression TRANSPOSEexpression : "(" expression ")" expression : create_matrix "(" expression ")" expression : SUB expressionexpression : assignable\n                  | matrixexpression : INTNUMexpression : FLOATNUMexpression : expression ADD expression\n            | expression SUB expression\n            | expression MUL expression\n            | expression DIV expression\n            | expression DOTADD expression\n            | expression DOTSUB expression\n            | expression DOTMUL expression\n            | expression DOTDIV expression\n            | expression GREATERTHAN expression\n            | expression LESSTHAN expression\n            | expression EQUAL expression\n            | expression NOTEQUAL expression\n            | expression LESSEQUAL expression\n            | expression GREATEREQUAL expression\n             matrix : "[" vectors "]"  create_matrix : ZEROS\n                      | ONES\n                      | EYE matrix_element : ID "[" INTNUM "," INTNUM "]" vectors : vector "," vectors\n               | vector vector : "[" variables "]"  vector_element : ID "[" expression "]" variables : expression "," variables\n                 | expression '
    
_lr_action_items = {'BREAK':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[9,9,-3,-4,-5,9,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,9,-62,9,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,9,-58,9,-13,-15,]),'CONTINUE':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[10,10,-3,-4,-5,10,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,10,-62,10,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,10,-58,10,-13,-15,]),'{':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[11,11,-3,-4,-5,11,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,11,-62,11,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,11,-58,11,-13,-15,]),'WHILE':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[12,12,-3,-4,-5,12,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,12,-62,12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,12,-58,12,-13,-15,]),'FOR':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[13,13,-3,-4,-5,13,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,13,-62,13,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,13,-58,13,-13,-15,]),'IF':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[15,15,-3,-4,-5,15,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,15,-62,15,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,15,-58,15,-13,-15,]),'PRINT':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[16,16,-3,-4,-5,16,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,16,-62,16,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,16,-58,16,-13,-15,]),'RETURN':([0,2,3,4,5,11,14,19,20,22,23,24,25,26,39,40,41,42,54,61,78,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,116,117,121,122,123,125,126,],[17,17,-3,-4,-5,17,-29,-30,-31,-6,-7,-8,-9,-10,-36,-37,-38,-39,-11,-32,-35,17,-62,17,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,-14,-34,17,-58,17,-13,-15,]),'ID':([0,2,3,4,5,11,13,14,16,17,19,20,22,23,24,25,26,28,30,31,36,38,39,40,41,42,49,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,113,114,116,117,119,121,122,123,125,126,],[14,14,-3,-4,-5,14,29,-29,14,14,-30,-31,-6,-7,-8,-9,-10,14,14,14,14,14,-36,-37,-38,-39,14,14,14,14,14,-11,14,14,-32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-35,14,14,-62,14,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-12,14,-14,-34,14,14,-58,14,-13,-15,]),'$end':([1,2,3,4,5,21,22,23,24,25,26,54,113,116,125,126,],[0,-2,-3,-4,-5,-1,-6,-7,-8,-9,-10,-11,-12,-14,-13,-15,]),'}':([2,3,4,5,21,22,23,24,25,26,27,54,113,116,125,126,],[-2,-3,-4,-5,-1,-6,-7,-8,-9,-10,54,-11,-12,-14,-13,-15,]),'ELSE':([3,4,5,22,23,24,25,26,54,113,116,125,126,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,123,-13,-15,]),';':([6,7,8,9,10,14,17,19,20,32,33,34,35,39,40,41,42,43,48,61,78,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,122,],[22,23,24,25,26,-29,-22,-30,-31,-16,-17,-19,-20,-36,-37,-38,-39,-21,-23,-32,-35,-24,-25,-26,-27,-28,-62,-18,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-34,-58,]),'(':([12,15,16,17,28,30,31,36,37,38,44,45,46,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[28,31,36,36,36,36,36,36,77,36,-55,-56,-57,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ASSIGN':([14,18,19,20,29,90,122,],[-29,49,-30,-31,56,-62,-58,]),'ADDASSIGN':([14,18,19,20,90,122,],[-29,50,-30,-31,-62,-58,]),'SUBASSIGN':([14,18,19,20,90,122,],[-29,51,-30,-31,-62,-58,]),'MULASSIGN':([14,18,19,20,90,122,],[-29,52,-30,-31,-62,-58,]),'DIVASSIGN':([14,18,19,20,90,122,],[-29,53,-30,-31,-62,-58,]),'TRANSPOSE':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,61,-36,-37,-38,-39,61,61,-38,61,61,-32,61,61,61,61,61,61,61,61,-62,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-33,61,61,-54,-34,61,-58,]),'ADD':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,62,-36,-37,-38,-39,62,62,-38,62,62,-32,62,-35,62,62,62,62,62,62,-62,-40,-41,-42,-43,-44,-45,-46,-47,62,62,62,62,62,62,-33,62,62,-54,-34,62,-58,]),'SUB':([14,16,17,19,20,28,30,31,34,36,38,39,40,41,42,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,117,119,121,122,],[-29,38,38,-30,-31,38,38,38,63,38,38,-36,-37,-38,-39,63,38,38,38,38,38,63,38,-38,63,63,38,-32,38,38,38,38,38,38,38,38,38,38,38,38,38,38,63,38,-35,38,63,63,63,63,63,63,-62,-40,-41,-42,-43,-44,-45,-46,-47,63,63,63,63,63,63,-33,63,63,-54,38,-34,38,63,-58,]),'MUL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,64,-36,-37,-38,-39,64,64,-38,64,64,-32,64,64,64,64,64,64,64,64,-62,64,64,-42,-43,64,64,-46,-47,64,64,64,64,64,64,-33,64,64,-54,-34,64,-58,]),'DIV':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,65,-36,-37,-38,-39,65,65,-38,65,65,-32,65,65,65,65,65,65,65,65,-62,65,65,-42,-43,65,65,-46,-47,65,65,65,65,65,65,-33,65,65,-54,-34,65,-58,]),'DOTADD':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,66,-36,-37,-38,-39,66,66,-38,66,66,-32,66,66,66,66,66,66,66,66,-62,66,66,-42,-43,-44,-45,-46,-47,66,66,66,66,66,66,-33,66,66,-54,-34,66,-58,]),'DOTSUB':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,67,-36,-37,-38,-39,67,67,-38,67,67,-32,67,67,67,67,67,67,67,67,-62,67,67,-42,-43,-44,-45,-46,-47,67,67,67,67,67,67,-33,67,67,-54,-34,67,-58,]),'DOTMUL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,68,-36,-37,-38,-39,68,68,-38,68,68,-32,68,68,68,68,68,68,68,68,-62,68,68,68,68,68,68,-46,-47,68,68,68,68,68,68,-33,68,68,-54,-34,68,-58,]),'DOTDIV':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,69,-36,-37,-38,-39,69,69,-38,69,69,-32,69,69,69,69,69,69,69,69,-62,69,69,69,69,69,69,-46,-47,69,69,69,69,69,69,-33,69,69,-54,-34,69,-58,]),'GREATERTHAN':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,70,-36,-37,-38,-39,70,70,-38,70,70,-32,70,-35,70,70,70,70,70,70,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,70,70,-54,-34,70,-58,]),'LESSTHAN':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,71,-36,-37,-38,-39,71,71,-38,71,71,-32,71,-35,71,71,71,71,71,71,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,71,71,-54,-34,71,-58,]),'EQUAL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,72,-36,-37,-38,-39,72,72,-38,72,72,-32,72,-35,72,72,72,72,72,72,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,72,72,-54,-34,72,-58,]),'NOTEQUAL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,73,-36,-37,-38,-39,73,73,-38,73,73,-32,73,-35,73,73,73,73,73,73,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,73,73,-54,-34,73,-58,]),'LESSEQUAL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,74,-36,-37,-38,-39,74,74,-38,74,74,-32,74,-35,74,74,74,74,74,74,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,74,74,-54,-34,74,-58,]),'GREATEREQUAL':([14,19,20,34,39,40,41,42,48,55,57,58,59,61,76,78,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,117,121,122,],[-29,-30,-31,75,-36,-37,-38,-39,75,75,-38,75,75,-32,75,-35,75,75,75,75,75,75,-62,-40,-41,-42,-43,-44,-45,-46,-47,None,None,None,None,None,None,-33,75,75,-54,-34,75,-58,]),',':([14,19,20,33,34,35,39,40,41,42,43,57,61,78,81,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,117,118,122,],[-29,-30,-31,60,-19,-20,-36,-37,-38,-39,-21,89,-32,-35,112,-62,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,119,-54,-34,-61,-58,]),')':([14,19,20,39,40,41,42,55,59,61,76,78,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,117,122,],[-29,-30,-31,-36,-37,-38,-39,87,91,-32,107,-35,-62,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,117,-54,-34,-58,]),']':([14,19,20,39,40,41,42,57,58,61,78,80,81,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,115,117,118,120,122,124,],[-29,-30,-31,-36,-37,-38,-39,-38,90,-32,-35,111,-60,-62,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,118,-64,-54,122,-34,-61,-59,-58,-63,]),'RANGE':([14,19,20,39,40,41,42,61,78,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,122,],[-29,-30,-31,-36,-37,-38,-39,-32,-35,114,-62,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-54,-34,-58,]),'[':([14,16,17,28,30,31,36,38,47,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,112,114,119,],[30,47,47,47,47,47,47,47,79,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,79,47,47,]),'INTNUM':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,89,114,119,],[41,41,41,57,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,115,41,41,]),'FLOATNUM':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'STRING':([16,60,],[43,43,]),'ZEROS':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ONES':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'EYE':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,11,],[1,21,27,]),'instruction_list':([0,2,11,87,91,121,123,],[2,2,2,113,116,125,126,]),'instruction_while':([0,2,11,87,91,121,123,],[3,3,3,3,3,3,3,]),'instruction_for':([0,2,11,87,91,121,123,],[4,4,4,4,4,4,4,]),'instruction_if':([0,2,11,87,91,121,123,],[5,5,5,5,5,5,5,]),'instruction_print':([0,2,11,87,91,121,123,],[6,6,6,6,6,6,6,]),'instruction_return':([0,2,11,87,91,121,123,],[7,7,7,7,7,7,7,]),'instruction_assign':([0,2,11,87,91,121,123,],[8,8,8,8,8,8,8,]),'assignable':([0,2,11,16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,87,91,114,119,121,123,],[18,18,18,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,18,18,39,39,18,18,]),'matrix_element':([0,2,11,16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,87,91,114,119,121,123,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'vector_element':([0,2,11,16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,87,91,114,119,121,123,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'printables':([16,60,],[32,92,]),'printable':([16,60,],[33,33,]),'expression':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[34,48,55,58,59,76,78,82,83,84,85,86,88,34,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,121,110,]),'str':([16,60,],[35,35,]),'create_matrix':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'matrix':([16,17,28,30,31,36,38,49,50,51,52,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,114,119,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'vectors':([47,112,],[80,120,]),'vector':([47,112,],[81,81,]),'variables':([79,119,],[109,124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instruction_list program','program',2,'p_program_instructions','parser.py',27),
  ('program -> instruction_list','program',1,'p_program_instructions','parser.py',28),
  ('instruction_list -> instruction_while','instruction_list',1,'p_instruction','parser.py',32),
  ('instruction_list -> instruction_for','instruction_list',1,'p_instruction','parser.py',33),
  ('instruction_list -> instruction_if','instruction_list',1,'p_instruction','parser.py',34),
  ('instruction_list -> instruction_print ;','instruction_list',2,'p_instruction','parser.py',35),
  ('instruction_list -> instruction_return ;','instruction_list',2,'p_instruction','parser.py',36),
  ('instruction_list -> instruction_assign ;','instruction_list',2,'p_instruction','parser.py',37),
  ('instruction_list -> BREAK ;','instruction_list',2,'p_instruction','parser.py',38),
  ('instruction_list -> CONTINUE ;','instruction_list',2,'p_instruction','parser.py',39),
  ('instruction_list -> { program }','instruction_list',3,'p_braces','parser.py',43),
  ('instruction_while -> WHILE ( expression ) instruction_list','instruction_while',5,'p_instruction_while','parser.py',48),
  ('instruction_for -> FOR ID ASSIGN expression RANGE expression instruction_list','instruction_for',7,'p_instruction_for','parser.py',51),
  ('instruction_if -> IF ( expression ) instruction_list','instruction_if',5,'p_instruction_if','parser.py',61),
  ('instruction_if -> IF ( expression ) instruction_list ELSE instruction_list','instruction_if',7,'p_instruction_if','parser.py',62),
  ('instruction_print -> PRINT printables','instruction_print',2,'p_instruction_print','parser.py',66),
  ('printables -> printable','printables',1,'p_printables','parser.py',69),
  ('printables -> printable , printables','printables',3,'p_printables','parser.py',70),
  ('printable -> expression','printable',1,'p_printable','parser.py',73),
  ('printable -> str','printable',1,'p_printable','parser.py',74),
  ('str -> STRING','str',1,'p_str','parser.py',77),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','parser.py',80),
  ('instruction_return -> RETURN expression','instruction_return',2,'p_instruction_return','parser.py',81),
  ('instruction_assign -> assignable ASSIGN expression','instruction_assign',3,'p_instruction_assign','parser.py',85),
  ('instruction_assign -> assignable ADDASSIGN expression','instruction_assign',3,'p_instruction_assign','parser.py',86),
  ('instruction_assign -> assignable SUBASSIGN expression','instruction_assign',3,'p_instruction_assign','parser.py',87),
  ('instruction_assign -> assignable MULASSIGN expression','instruction_assign',3,'p_instruction_assign','parser.py',88),
  ('instruction_assign -> assignable DIVASSIGN expression','instruction_assign',3,'p_instruction_assign','parser.py',89),
  ('assignable -> ID','assignable',1,'p_assignable','parser.py',93),
  ('assignable -> matrix_element','assignable',1,'p_assignable','parser.py',94),
  ('assignable -> vector_element','assignable',1,'p_assignable','parser.py',95),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression_trans','parser.py',99),
  ('expression -> ( expression )','expression',3,'p_expression_nested','parser.py',103),
  ('expression -> create_matrix ( expression )','expression',4,'p_expression_create_matrix','parser.py',107),
  ('expression -> SUB expression','expression',2,'p_expression_minus','parser.py',112),
  ('expression -> assignable','expression',1,'p_expression_literal','parser.py',118),
  ('expression -> matrix','expression',1,'p_expression_literal','parser.py',119),
  ('expression -> INTNUM','expression',1,'p_expression_intnum','parser.py',123),
  ('expression -> FLOATNUM','expression',1,'p_expression_floatnum','parser.py',127),
  ('expression -> expression ADD expression','expression',3,'p_binary_expression','parser.py',131),
  ('expression -> expression SUB expression','expression',3,'p_binary_expression','parser.py',132),
  ('expression -> expression MUL expression','expression',3,'p_binary_expression','parser.py',133),
  ('expression -> expression DIV expression','expression',3,'p_binary_expression','parser.py',134),
  ('expression -> expression DOTADD expression','expression',3,'p_binary_expression','parser.py',135),
  ('expression -> expression DOTSUB expression','expression',3,'p_binary_expression','parser.py',136),
  ('expression -> expression DOTMUL expression','expression',3,'p_binary_expression','parser.py',137),
  ('expression -> expression DOTDIV expression','expression',3,'p_binary_expression','parser.py',138),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_binary_expression','parser.py',139),
  ('expression -> expression LESSTHAN expression','expression',3,'p_binary_expression','parser.py',140),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_expression','parser.py',141),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_binary_expression','parser.py',142),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_binary_expression','parser.py',143),
  ('expression -> expression GREATEREQUAL expression','expression',3,'p_binary_expression','parser.py',144),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','parser.py',148),
  ('create_matrix -> ZEROS','create_matrix',1,'p_create_matrix','parser.py',152),
  ('create_matrix -> ONES','create_matrix',1,'p_create_matrix','parser.py',153),
  ('create_matrix -> EYE','create_matrix',1,'p_create_matrix','parser.py',154),
  ('matrix_element -> ID [ INTNUM , INTNUM ]','matrix_element',6,'p_matrix_element','parser.py',158),
  ('vectors -> vector , vectors','vectors',3,'p_vectors','parser.py',163),
  ('vectors -> vector','vectors',1,'p_vectors','parser.py',164),
  ('vector -> [ variables ]','vector',3,'p_vector','parser.py',168),
  ('vector_element -> ID [ expression ]','vector_element',4,'p_vector_element','parser.py',172),
  ('variables -> expression , variables','variables',3,'p_variables','parser.py',177),
  ('variables -> expression','variables',1,'p_variables','parser.py',178),
]
